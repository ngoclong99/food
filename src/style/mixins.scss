@use 'sass:math';
@mixin toRem($property, $value) {
  #{$property}: ($value / 16) + rem;
}
//  @include toRem(width, 400);
@function pxToRem($pxValue) {
  @return math.div($pxValue, 16px) * 1rem;
}
//  width: pxToRem(400px)
@mixin font-style($size, $weight, $height) {
  font-size: pxToRem($size);
  font-weight: $weight;
  line-height: pxToRem($height);
}
//  @include font-style(16px, 400, 18px);

// common
@mixin pdWrap {
  padding-top: pxToRem(90px);
  padding-bottom: pxToRem(90px);
}

$orange: #e75b1e;
$blue: #1e69b8;
$green: #8dc63f;
$yellow: #fdcb03;
$white: #ffffff;
$silver: #e6e6e6;
$breakpoints: (
  'sm': (
    min-width: 576px,
  ),
  'md': (
    min-width: 768px,
  ),
  'lg': (
    min-width: 992px,
  ),
  'xl': (
    min-width: 1200px,
  ),
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
}
